import React from 'react';
import { shallow } from 'enzyme';
import ExampleWork, { ExampleWorkBubble } from '../js/example-work';

import Enzyme from 'enzyme';
import Adapter from 'enzyme-adapter-react-16';
Enzyme.configure({ adapter: new Adapter()});
//stub out our data here.
const myWork = [
  //3 javascript object literals
  {
    'title' : "Work Example",
    'image' : {
      'description': "example screenshot of a project involving code",
      'src': "images/example1.png",
      'comment': ""
    }
  },
  {
    'title' : "Portfolio Boilerplate",
    'image' : {
      'description': "example screenshot of a project involving chemistry",
      'src': "images/example2.png",
      'comment': ""
    }
  }
];

describe("ExampleWork component", () => {
  // component is an object generated by Enzyme. Shallow only render one layer of components.
  let component = shallow(<ExampleWork work={myWork}/>);
  it("should be a section element", () => {
    expect(component.type()).toEqual('span');
  });

  it("should contain as many children as there are work examples", () => {
    //find() finds the children of the component
    expect(component.find("ExampleWorkBubble").length).toEqual(myWork.length);
  });

  it("Should allow the modal to open and close", () => {
    //the instance() is provided by enzyme that lets us call the function and get properties directly from
    //the component.
    component.instance().openModal();
    expect(component.instance().state.modalOpen).toBe(true);

    component.instance().closeModal();
    expect(component.instance().state.modalOpen).toBe(false);
  });
});

describe("ExampleWorkBubble component", () => {
  /*  We don't need real open function.
  we can create one by mocking out function. The test for each component should only test component itself
  it does not need to test the function. Jest provides way to test mock functions with the fn function.
  this mockOpenModalFn is what we wanna pass to the example work bubble */
  let mockOpenModalFn = jest.fn();
  let component = shallow(<ExampleWorkBubble example={myWork[1]}
    openModal={mockOpenModalFn}/>);

  let images = component.find("img");

  it("Should contain a single img element", () => {
    expect(images.length).toEqual(1);
  });

  it("Should have the image src set correctly", () => {
    expect(images.prop('src')).toEqual(myWork[1].image.src);
  });

  it("Should call the openModal handler when clicked", () =>{
    /* Without browser, enzyme will simulate a click even on that div */
    component.find(".section__exampleWrapper").simulate('click');
    expect(mockOpenModalFn).toHaveBeenCalled();
  });
});
